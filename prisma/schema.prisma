generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider ="postgres"
  url      =env("DATABASE_URL")
}

model Club {
  id        Int           @id @default(autoincrement())
  name      String
  meetups Meetup[]
}


model User {
  id              Int     @id @default(autoincrement())
  email           String  @unique
  passHash        String
  name            String
  region          Region
  gender          Gender
  isClubOrganiser Boolean @default(false)

  sessions Session[]

  organiserFor Meetup[]
  competingIn  UserInMeetup[]
  results Result[]
}

// INFO: using session authentication instead of token
model Session {
  id                Bytes @id
  ip    String

  user User @relation(fields: [userId], references: [id])
  userId Int
}

model UserInMeetup {
  user   User @relation(fields: [userId], references: [id])
  userId Int

  meetup   Meetup @relation(fields: [meetupId], references: [id])
  meetupId Int

  registeredEvents Puzzle[]

  @@id([userId, meetupId])
}

model Meetup {
  id              Int    @id @default(autoincrement())
  name            String
  venue           String
  location        String
  organisers      User[] // TODO: check relation?
  description     String
  contact         String
  competitorLimit Int

  date            DateTime @db.Date

  isPublished     Boolean @default(false)

  users UserInMeetup[]

  club   Club @relation(fields: [clubId], references: [id])
  clubId Int

  rounds Round[]
}


model Round {
  id            Int          @id @default(autoincrement())
  startDate     DateTime
  endDate       DateTime
  puzzle        Puzzle
  format        Format
  results       Result[]

  proceedNumber   Int

  meetup   Meetup @relation(fields: [meetupId], references: [id])
  meetupId Int
}

model Result {
  id Int @id @default(autoincrement())
  round     Round @relation(fields: [roundId], references: [id])
  roundId   Int

  user      User @relation(fields: [userId], references: [id])
  userId Int
  solves    Solve[]
}


model Solve {
  index Int
  time    Int
  penalty Penalty

  result Result @relation(fields: [resultId], references: [id])
  resultId Int

  @@id([resultId, index])


}

enum Penalty {
  NONE
  PLUSTWO
  DNF
}



// INFO: ENUMS
enum Gender {
  MALE
  FEMALE
  OTHER
}

enum Region {
  NORTHLAND
  AUCKLAND
  WAIKATO
  BOP
  GISBORNE
  HAWKES_BAY
  TARANAKI
  MANGAWATU_WHANGANUI
  WELLINGTON
  TASMAN
  NELSON
  MALBOROUGH
  WEST_COAST
  CANTERBURY
  OTAGO
  SOUTHLAND
}

enum Puzzle {
  THREE
  TWO
  FOUR
  FIVE
  SIX
  SEVEN

  SQ1
  SKEWB
  PYRA
  MEGA
  OH
  CLOCK

  FMC
  THREEBLD
  MULTIBLD
  FOURBLD
  FIVEBLD
}

enum Format {
  BO3
  BO1
  MO3
  AO5
}
